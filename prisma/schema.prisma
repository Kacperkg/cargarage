// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id          String       @id @default(cuid())
    clerkId     String       @unique
    email       String       @unique
    name        String?
    projectCars ProjectCar[]
    dreamCars   DreamCar[]
    myCars      MyCar[]
}

model DreamCar {
    id               Int              @id @default(autoincrement())
    make             String
    model            String
    year             Int
    hp               Int
    color            String?
    description      String?
    engineType       EngineType
    transmissionType TransmissionType

    ownerId String
    owner   User   @relation(fields: [ownerId], references: [clerkId], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("dream_cars")
}

model MyCar {
    id               Int              @id @default(autoincrement())
    vin              String?
    make             String
    model            String
    year             Int
    mileage          Int
    milesBoughtAt    Int
    hp               Int
    color            String?
    description      String?
    engineType       EngineType
    transmissionType TransmissionType
    purchaseDate     DateTime
    licensePlate     String?
    engine           String?
    status           CarStatus        @default(Daily)

    ownerId String
    owner   User   @relation(fields: [ownerId], references: [clerkId], onDelete: Cascade)

    images   CarImage[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("my_cars")
}


model CarImage {
  id     Int    @id @default(autoincrement())
  url    String
  carId  Int
  car    MyCar  @relation(fields: [carId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model ProjectCar {
    id             String        @id @default(cuid())
    name           String
    make           String
    model          String
    year           Int
    vin            String?       @unique
    status         ProjectStatus @default(Planned)
    description    String?
    startDate      DateTime      @default(now())
    completionDate DateTime?
    budget         Float?
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt
    priority       Priority
    projectType    ProjectType

    ownerId String
    owner   User   @relation(fields: [ownerId], references: [clerkId], onDelete: Cascade)

    modifications Modification[]
}

model Modification {
    id           String     @id @default(cuid())
    projectCar   ProjectCar @relation(fields: [projectCarId], references: [id], onDelete: Cascade)
    projectCarId String
    name         String
    description  String?
    cost         Float?
    date         DateTime   @default(now())
    createdAt    DateTime   @default(now())
}

enum ProjectStatus {
    Planned
    InProgress
    Completed
    OnHold
    Cancelled
}

enum EngineType {
    GASOLINE
    ELECTRIC
    HYBRID
    ROTARY
    DIESEL
    V4
    V6
    V8
    V10
    V12
    I4
    I6
}

enum TransmissionType {
    MANUAL
    AUTOMATIC
    SEMI_AUTOMATIC
    CVT
    DCT
}

enum ProjectType {
    Performance
    Aesthetics
    Restoration
    Maintenance
    AudioSystem
    Suspension
}

enum Priority {
    Low
    Medium
    High
    Urgent
}

enum CarStatus {
    Daily
    Summer
    Winter
    Track
    Show
    Garage
    Project
    Sold
}